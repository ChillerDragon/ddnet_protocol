name: Install

on:
  push:
  pull_request:
  merge_group:

jobs:
  cmake-install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Prepare Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install -y pkg-config cmake cmake build-essential

    - name: Prepare macOS
      if: contains(matrix.os, 'macOS')
      run: |
        brew update || true
        brew install pkg-config cmake shellcheck || true
        sudo rm -rf /Library/Developer/CommandLineTools

    - name: Prepare
      run: |
          mkdir -p ~/.local/bin/
          wget -O ~/.local/bin/lintdown.sh https://raw.githubusercontent.com/ChillerDragon/lintdown.sh/master/lintdown.sh
          chmod +x ~/.local/bin/lintdown.sh

    - name: Install
      run: |
        mkdir build
        cd build
        cmake ..
        sudo make install

    - name: Build and run examples
      run: |
        gcc -DCODE_SPACE=USER_SPACE examples/huffman.c -o huffman -lddnet_protocol
        ./huffman
        [ "$(./huffman)" = foo ] || { printf 'Error: expected "foo" but got ^\n'; exit 1; }

    - name: Build example snippet in README.md
      run: |
          CFLAGS=-DCODE_SPACE=USER_SPACE LDLIBS=-lddnet_protocol lintdown.sh README.md

    - name: Build all code snippets in documentation
      run: |
          export C_INCLUDES="$(ls include/ddnet_protocol/ | awk '{ print "ddnet_protocol/" $0 }' | tr '\n' ',')"
          C_INCLUDES+=stdint.h,stddef.h,stdbool.h
          CFLAGS=-DCODE_SPACE=USER_SPACE LDLIBS=-lddnet_protocol lintdown.sh docs/*.md --skip-pattern 'typedef (enum|struct) {' --wrap-main

    - name: Uninstall
      run: |
        cd build
        cmake ..
        sudo make uninstall

    - name: Expect build to fail after uninstall
      run: |
        gcc examples/huffman.c -o huffman -lddnet_protocol && { printf 'Error: expected build to fail after uninstall but it passed!\n'; exit 1; } || true

